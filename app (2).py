# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IVyQVhsBMV3lsIYOUnYoyiS1Iuwzymid
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit

import streamlit as st
import pickle
import numpy as np

# Page setup
st.set_page_config(page_title="Vehicle Damage Prediction App")
st.title("🚗 Vehicle Insurance Damage Prediction")

# Load the model
try:
    with open('vehicle_insurance.pkl', 'rb') as file:
        model = pickle.load(file)
except FileNotFoundError:
    st.error("Model file not found. Please upload 'vehicle_insurance.pkl'.")
    st.stop()

# User Inputs
vehicle_id = st.text_input("🆔 Enter Vehicle ID")
driving_license_input = st.selectbox("🪪 Do you have a Driving License?", ["Yes", "No"])
driving_license = 1 if driving_license_input == "Yes" else 0

veh_age_input = st.selectbox("📅 Vehicle Age Category", ["> 2 Years", "1-2 Year", "< 1 Year"])
veh_age_mapping = {"< 1 Year": 2, "1-2 Year": 1, "> 2 Years": 0}
veh_age = veh_age_mapping[veh_age_input]

annual_premium = st.number_input("💰 Annual Premium (₹)", min_value=0, step=100)

# Predict Button
if st.button("🔍 Predict Vehicle Damage"):
    try:
        # Input array shaped correctly
        user_input = np.array([[driving_license, veh_age, annual_premium]])

        prediction = model.predict(user_input)

        if prediction[0] in [1, 'Yes', 'YES', 'yes']:
            st.success("✅ Vehicle is likely to be **damaged**.")
        else:
            st.info("ℹ️ Vehicle is likely **not damaged**.")
    except Exception as e:
        st.error(f"❌ An error occurred during prediction: {e}")